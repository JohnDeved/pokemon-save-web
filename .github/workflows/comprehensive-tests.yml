---
name: Comprehensive Tests

on:
  pull_request:
    branches: ["**"]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Test type to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - unit
          - integration
          - lua
          - lint

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: johndeved/pokemon-save-web/mgba-test-env

jobs:
  comprehensive-test:
    name: Run Comprehensive Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Setup environment
        uses: ./.github/workflows/copilot-setup-steps.yml
        with:
          node-version: '20'
          setup-docker: true
          install-playwright: false

      - name: Run linting
        if: >-
          ${{ github.event.inputs.test_type == 'lint' ||
              github.event.inputs.test_type == 'all' ||
              github.event.inputs.test_type == null ||
              github.event.inputs.test_type == '' }}
        run: npm run lint

      - name: Run build test
        if: >-
          ${{ github.event.inputs.test_type == 'unit' ||
              github.event.inputs.test_type == 'all' ||
              github.event.inputs.test_type == null ||
              github.event.inputs.test_type == '' }}
        run: npm run build

      - name: Run unit and integration tests
        if: >-
          ${{ github.event.inputs.test_type == 'unit' ||
              github.event.inputs.test_type == 'integration' ||
              github.event.inputs.test_type == 'all' ||
              github.event.inputs.test_type == null ||
              github.event.inputs.test_type == '' }}
        run: npm run test:run

      # mGBA Docker Setup for Lua Tests
      - name: Set up Docker Buildx
        if: >-
          ${{ github.event.inputs.test_type == 'lua' ||
              github.event.inputs.test_type == 'all' ||
              github.event.inputs.test_type == null ||
              github.event.inputs.test_type == '' }}
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: >-
          ${{ github.event.inputs.test_type == 'lua' ||
              github.event.inputs.test_type == 'all' ||
              github.event.inputs.test_type == null ||
              github.event.inputs.test_type == '' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Try to pull pre-built mGBA image
        if: >-
          ${{ github.event.inputs.test_type == 'lua' ||
              github.event.inputs.test_type == 'all' ||
              github.event.inputs.test_type == null ||
              github.event.inputs.test_type == '' }}
        id: pull-image
        run: |
          echo "Attempting to pull pre-built mGBA image..."
          if docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest 2>/dev/null; then
            echo "✅ Successfully pulled pre-built image"
            echo "image_available=true" >> $GITHUB_OUTPUT
            docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest mgba-test-env:latest
          elif docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main 2>/dev/null; then
            echo "✅ Successfully pulled main branch image"
            echo "image_available=true" >> $GITHUB_OUTPUT
            docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:main mgba-test-env:latest
          else
            echo "⚠️ Pre-built image not available, will build from source"
            echo "image_available=false" >> $GITHUB_OUTPUT
          fi
        continue-on-error: true

      - name: Build mGBA image if not available
        if: >-
          ${{ (github.event.inputs.test_type == 'lua' ||
               github.event.inputs.test_type == 'all' ||
               github.event.inputs.test_type == null ||
               github.event.inputs.test_type == '') &&
              steps.pull-image.outputs.image_available != 'true' }}
        run: |
          echo "Building mGBA Docker image from source..."
          docker build -t mgba-test-env:latest -f docker/Dockerfile .
        continue-on-error: false

      - name: Start mGBA container for testing
        if: >-
          ${{ github.event.inputs.test_type == 'lua' ||
              github.event.inputs.test_type == 'all' ||
              github.event.inputs.test_type == null ||
              github.event.inputs.test_type == '' }}
        run: |
          echo "Starting mGBA container with proper volume mounts..."
          docker run -d --name mgba-test \
            -p 7102:7102 \
            -e DISPLAY=:99 \
            -e QT_QPA_PLATFORM=xcb \
            -e GAME=emerald \
            -v "$(pwd)/src/lib/parser/__tests__/test_data:/app/data:rw" \
            -v "$(pwd)/scripts/mgba-lua/http-server.lua:/app/scripts/mgba_http_server.lua:ro" \
            mgba-test-env:latest

          # Wait for container to be ready
          echo "Waiting for mGBA HTTP server to be ready..."
          timeout 90s bash -c 'until curl -sf http://localhost:7102/ > /dev/null 2>&1; do sleep 3; done'
          echo "✅ mGBA HTTP server is ready"

      - name: Verify mGBA container health
        if: >-
          ${{ github.event.inputs.test_type == 'lua' ||
              github.event.inputs.test_type == 'all' ||
              github.event.inputs.test_type == null ||
              github.event.inputs.test_type == '' }}
        run: |
          echo "Testing mGBA HTTP server endpoints..."
          curl -sf http://localhost:7102/ || { echo "❌ Root endpoint failed"; exit 1; }
          echo "✅ mGBA HTTP server is responding correctly"

      - name: Run Lua HTTP Server integration tests
        if: >-
          ${{ github.event.inputs.test_type == 'lua' ||
              github.event.inputs.test_type == 'all' ||
              github.event.inputs.test_type == null ||
              github.event.inputs.test_type == '' }}
        run: |
          echo "Running Lua HTTP Server integration tests..."
          npm run test:run scripts/mgba-lua/__tests__/lua-http-server.integration.test.ts
        env:
          CI: true
          MGBA_HTTP_URL: http://localhost:7102

      - name: Test WebSocket watch mode functionality
        if: >-
          ${{ github.event.inputs.test_type == 'lua' ||
              github.event.inputs.test_type == 'all' ||
              github.event.inputs.test_type == null ||
              github.event.inputs.test_type == '' }}
        run: |
          echo "Testing WebSocket watch mode..."
          timeout 30s npm run parse -- --websocket --watch --debug || true
          echo "✅ WebSocket watch mode test completed"
        env:
          CI: true

      - name: Container logs (if tests fail)
        if: failure()
        run: |
          echo "=== mGBA Container Logs ==="
          docker logs mgba-test || echo "No container logs available"

      - name: Stop mGBA container
        if: always()
        run: |
          docker stop mgba-test || true
          docker rm mgba-test || true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: comprehensive-test-results
          path: |
            test-results.xml
            coverage/
            *.log
          retention-days: 7

      - name: Create test summary
        if: always()
        run: |
          echo "## Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Lint**: Completed" >> $GITHUB_STEP_SUMMARY
          echo "- **Build**: Completed" >> $GITHUB_STEP_SUMMARY
          echo "- **Unit/Integration Tests**: Completed" >> $GITHUB_STEP_SUMMARY
          echo "- **Lua/Docker Tests**: Completed" >> $GITHUB_STEP_SUMMARY
          echo "- **WebSocket Watch Mode**: Tested" >> $GITHUB_STEP_SUMMARY
