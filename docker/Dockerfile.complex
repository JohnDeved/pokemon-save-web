# Multi-stage Docker build for mGBA test environment
# Stage 1: Build mGBA from source with Lua support
FROM ubuntu:22.04 AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    pkg-config \
    qt6-base-dev \
    qt6-multimedia-dev \
    qt6-tools-dev \
    liblua5.4-dev \
    lua5.4 \
    libsdl2-dev \
    libedit-dev \
    libelf-dev \
    libpng-dev \
    libzip-dev \
    zlib1g-dev \
    libzip4 \
    zip \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Clone and build mGBA with Lua support
WORKDIR /build
RUN git clone --depth 1 --branch master https://github.com/mgba-emu/mgba.git
WORKDIR /build/mgba

# Configure mGBA build with Qt frontend and Lua scripting
RUN mkdir build && cd build && \
    cmake .. \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_QT=ON \
    -DBUILD_SDL=OFF \
    -DUSE_LUA=ON \
    -DUSE_DISCORD_RPC=OFF \
    -DUSE_MINIZIP=OFF \
    -DCMAKE_INSTALL_PREFIX=/usr/local \
    && make -j$(nproc) && make install

# Stage 2: Runtime environment
FROM ubuntu:22.04

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    qt6-base-dev \
    qt6-multimedia-dev \
    liblua5.4-0 \
    lua5.4 \
    libsdl2-2.0-0 \
    libedit2 \
    libelf1 \
    libpng16-16 \
    libzip4 \
    zlib1g \
    xvfb \
    curl \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Copy built mGBA from builder stage
COPY --from=builder /usr/local/bin/mgba-qt /usr/local/bin/mgba-qt
COPY --from=builder /usr/local/lib/libmgba.* /usr/local/lib/
COPY --from=builder /usr/local/include/mgba/ /usr/local/include/mgba/

# Update library cache
RUN ldconfig

# Create working directory
WORKDIR /app

# Copy test data and scripts
COPY test_data/ /app/test_data/
COPY scripts/ /app/scripts/

# Copy entrypoint script
COPY docker/entrypoint.sh /app/entrypoint.sh

# Make entrypoint executable
RUN chmod +x /app/entrypoint.sh

# Expose HTTP server port
EXPOSE 7102

# Set entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]