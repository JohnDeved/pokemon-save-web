# Simplified Docker build for mGBA test environment
FROM ubuntu:22.04

# Set environment to avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies and build mGBA from source with minimal features
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    pkg-config \
    qt6-base-dev \
    qt6-multimedia-dev \
    qt6-tools-dev \
    qt6-base-private-dev \
    liblua5.4-dev \
    lua5.4 \
    libsdl2-dev \
    libedit-dev \
    libelf-dev \
    libpng-dev \
    zlib1g-dev \
    xvfb \
    curl \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Clone and build mGBA with minimal configuration to avoid dependency issues
WORKDIR /build
RUN git clone --depth 1 --branch master https://github.com/mgba-emu/mgba.git
WORKDIR /build/mgba

# Build with minimal features to avoid complex dependency issues
RUN mkdir build && cd build && \
    cmake .. \
    -DCMAKE_BUILD_TYPE=Release \
    -DBUILD_QT=ON \
    -DBUILD_SDL=OFF \
    -DUSE_LUA=ON \
    -DUSE_DISCORD_RPC=OFF \
    -DUSE_FFMPEG=OFF \
    -DUSE_MINIZIP=OFF \
    -DUSE_LIBZIP=OFF \
    -DCMAKE_INSTALL_PREFIX=/usr/local \
    && make -j$(nproc) && make install

# Update library cache
RUN ldconfig

# Create working directory
WORKDIR /app

# Copy test data and scripts
COPY test_data/ /app/test_data/
COPY scripts/ /app/scripts/

# Copy entrypoint script
COPY docker/entrypoint.sh /app/entrypoint.sh

# Make entrypoint executable
RUN chmod +x /app/entrypoint.sh

# Expose HTTP server port
EXPOSE 7102

# Set entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]