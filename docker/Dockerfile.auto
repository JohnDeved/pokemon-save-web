# mGBA Docker environment with automatic prebuilt binary download and fallback to source build
FROM ubuntu:22.04

# Set environment to avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Install dependencies for both prebuilt and source build scenarios
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    pkg-config \
    qtbase5-dev \
    qtmultimedia5-dev \
    liblua5.4-dev \
    lua5.4 \
    libpng-dev \
    zlib1g-dev \
    libzip-dev \
    libedit-dev \
    libepoxy-dev \
    xvfb \
    curl \
    unzip \
    wget \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create working directory
WORKDIR /app

# Copy download script that will handle prebuilt binary or source build
COPY docker/scripts/download-mgba.sh /app/download-mgba.sh
RUN chmod +x /app/download-mgba.sh

# Copy prebuilt files if available (will be used as fallback if download fails)
COPY docker/data/ /app/prebuilt_data/

# Download or build mGBA
RUN /app/download-mgba.sh

# Copy required files
COPY docker/data/ /app/data/
COPY scripts/mgba-lua/http-server.lua /app/data/http-server.lua
COPY docker/entrypoint.sh /app/entrypoint.sh

# Make entrypoint executable
RUN chmod +x /app/entrypoint.sh

# Expose HTTP server port
EXPOSE 7102

# Set entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]